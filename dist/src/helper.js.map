{"version":3,"sources":["../../src/helper.js"],"names":["PreOrder","PostOrder","genTraverseTreeListFunc","treeList","handle","rec","node","order","children","length","forEach","element","preOrderTreeList","postOrderTreeList","deepClone","obj","hash","Object","Function","has","get","result","constructor","error","create","getPrototypeOf","set","assign","keys","map","key","cloneTreeList","copyList","WeakMap","push","tree"],"mappings":";;;;;;;;;;AAAA;;;;;;AAMA,IAAMA,WAAW,UAAjB;AACA,IAAMC,YAAY,WAAlB;;AAEA,IAAMC,0BAA0B,SAA1BA,uBAA0B;AAAA,WAAS,UAACC,QAAD,EAAWC,MAAX,EAAsB;AAC3D,YAAMC,MAAM,SAANA,GAAM,CAACC,IAAD,EAAU;AAClB,gBAAIC,UAAUP,QAAd,EAAwBI,OAAOE,IAAP;;AAExB,gBAAIA,KAAKE,QAAL,IAAiBF,KAAKE,QAAL,CAAcC,MAAd,GAAuB,CAA5C,EAA+C;AAC3CH,qBAAKE,QAAL,CAAcE,OAAd,CAAsB;AAAA,2BAAWL,IAAIM,OAAJ,CAAX;AAAA,iBAAtB;AACH;;AAED,gBAAIJ,UAAUN,SAAd,EAAyBG,OAAOE,IAAP;AAC5B,SARD;;AAUAH,iBAASO,OAAT,CAAiB;AAAA,mBAAQL,IAAIC,IAAJ,CAAR;AAAA,SAAjB;;AAEA,eAAOH,QAAP;AACH,KAd+B;AAAA,CAAhC;;AAgBO,IAAMS,8CAAmBV,wBAAwBF,QAAxB,CAAzB;;AAEA,IAAMa,gDAAoBX,wBAAwBD,SAAxB,CAA1B;;AAEP;AACA,IAAMa,YAAY,SAAZA,SAAY,CAACC,GAAD,EAAMC,IAAN,EAAe;AAC7B;AACA,QAAIC,OAAOF,GAAP,MAAgBA,GAAhB,IAAuBA,eAAeG,QAA1C,EAAoD,OAAOH,GAAP;AACpD,QAAIC,KAAKG,GAAL,CAASJ,GAAT,CAAJ,EAAmB,OAAOC,KAAKI,GAAL,CAASL,GAAT,CAAP;;AAEnB,QAAIM,eAAJ;AACA,QAAI;AACAA,iBAAS,IAAIN,IAAIO,WAAR,EAAT;AACH,KAFD,CAEE,OAAOC,KAAP,EAAc;AACZF,iBAASJ,OAAOO,MAAP,CAAcP,OAAOQ,cAAP,CAAsBV,GAAtB,CAAd,CAAT;AACH;;AAEDC,SAAKU,GAAL,CAASX,GAAT,EAAcM,MAAd;AACA,WAAOJ,OAAOU,MAAP,gBAAcN,MAAd,4BAAyBJ,OAAOW,IAAP,CAAYb,GAAZ,EAAiBc,GAAjB,CAAqB;AAAA,mCAAUC,GAAV,EAAgBhB,UAAUC,IAAIe,GAAJ,CAAV,EAAoBd,IAApB,CAAhB;AAAA,KAArB,CAAzB,GAAP;AACH,CAdD;;AAgBO,IAAMe,wCAAgB,SAAhBA,aAAgB,CAAC5B,QAAD,EAAc;AACvC,QAAM6B,WAAW,EAAjB;AACA,QAAMhB,OAAO,IAAIiB,OAAJ,EAAb;AACAjB,SAAKU,GAAL,CAASvB,QAAT,EAAmB6B,QAAnB;;AAEA7B,aAASO,OAAT,CAAiB;AAAA,eAAQsB,SAASE,IAAT,CAAcpB,UAAUqB,IAAV,EAAgBnB,IAAhB,CAAd,CAAR;AAAA,KAAjB;AACA,WAAOgB,QAAP;AACH,CAPM","file":"helper.js","sourcesContent":["/**\n * @author lany44\n * @date 2018/8/28-上午11:23\n * @file helper\n */\n\nconst PreOrder = 'PreOrder';\nconst PostOrder = 'PostOrder';\n\nconst genTraverseTreeListFunc = order => (treeList, handle) => {\n    const rec = (node) => {\n        if (order === PreOrder) handle(node);\n\n        if (node.children && node.children.length > 0) {\n            node.children.forEach(element => rec(element));\n        }\n\n        if (order === PostOrder) handle(node);\n    };\n\n    treeList.forEach(node => rec(node));\n\n    return treeList;\n};\n\nexport const preOrderTreeList = genTraverseTreeListFunc(PreOrder);\n\nexport const postOrderTreeList = genTraverseTreeListFunc(PostOrder);\n\n// https://stackoverflow.com/questions/40291987/javascript-deep-clone-object-with-circular-references\nconst deepClone = (obj, hash) => {\n    // Do not try to clone primitives or functions\n    if (Object(obj) !== obj || obj instanceof Function) return obj;\n    if (hash.has(obj)) return hash.get(obj);\n\n    let result;\n    try {\n        result = new obj.constructor();\n    } catch (error) {\n        result = Object.create(Object.getPrototypeOf(obj));\n    }\n\n    hash.set(obj, result);\n    return Object.assign(result, ...Object.keys(obj).map(key => ({[key]: deepClone(obj[key], hash)})));\n};\n\nexport const cloneTreeList = (treeList) => {\n    const copyList = [];\n    const hash = new WeakMap();\n    hash.set(treeList, copyList);\n\n    treeList.forEach(tree => copyList.push(deepClone(tree, hash)));\n    return copyList;\n};\n\n"]}