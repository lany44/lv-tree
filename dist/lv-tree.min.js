"use strict";var LvTreeNode={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"lv-tree-node",class:{"is-root":!e.node.$$parent,"is-last-child":e.isLastChild}},[n("div",{staticClass:"node-el",class:{"is-root":!e.node.$$parent,"is-first-child":e.isFirstChild,"extended-horizontal":!e.hasChildren}},[n("div",{staticClass:"change-fold"},[e.hasChildren?e._t("fold-icon"):e._e()],2),e._v(" "),e._t("content")],2),e._v(" "),e.isFold?e._e():n("div",{staticClass:"child-tree-wrap"},[e._t("children")],2)])},staticRenderFns:[],name:"LvTreeNode",props:{node:{type:Object,required:!0},options:{type:Object,default:function(){}}},computed:{isLastChild:function(){var e=this.node.$$parent,t=this.node;return e&&e.children[e.children.length-1]===t},isFirstChild:function(){var e=this.node.$$parent,t=this.node;return e&&e.children[0]===t},hasChildren:function(){return this.node.children.length>0},isFold:function(){return this.node.$$isFold}},methods:{changeFold:function(){this.node.$$isFold=!this.node.$$isFold}}},renderChildTree={props:{data:Array,options:Object,scopedSlots:Object},render:function(e){return e("lv-tree",{props:{data:this.data,options:this.options},scopedSlots:this.scopedSlots})}},lvTree={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"lv-tree-wrap"},[n("ul",{staticClass:"lv-tree",class:{root:e.isRoot}},e._l(e.renderData,function(t,o){return n("li",{key:o,staticClass:"tree-node"},[n("lv-tree-node",{attrs:{node:t,options:e.options}},[n("template",{slot:"fold-icon"},[e._t("fold-icon",null,{node:t,parent:t.$$parent})],2),e._v(" "),n("template",{slot:"content"},[e._t("default",null,{node:t,parent:t.$$parent})],2),e._v(" "),e.hasChildren(t)?n("renderChildTree",{attrs:{slot:"children","scoped-slots":e.$scopedSlots,data:t.children,options:e.options},slot:"children"}):e._e()],2)],1)}))])},staticRenderFns:[],_scopeId:"data-v-1ec5e5b8",name:"LvTree",components:{LvTreeNode:LvTreeNode,renderChildTree:renderChildTree},props:{data:{type:Array,default:function(){return[]}},options:{type:Object,default:function(){return{foldDeep:null}}}},computed:{isRoot:function(){return this.data.length>0&&this.data.every(function(e){return!e.$$parent})},renderData:function(){var e=this,t=e.isRoot,n=e.data,o=void 0===n?[]:n,r=e.options.foldDeep,i=void 0===r?null:r,s=o;if(t){s.forEach(function(t){return function t(n,o,r){if(e.$set(n,"$$deep",o),e.$set(n,"$$parent",r),"boolean"==typeof n.$$isFold){var s=n.$$isFold;delete n.$$isFold,e.$set(n,"$$isFold",s)}else e.$set(n,"$$isFold",!!i&&Boolean(n.$$deep>=i));0!==n.children.length&&n.children.forEach(function(e){return t(e,o+1,n)})}(t,1,null)})}return s}},methods:{hasChildren:function(e){return e.children&&e.children.length>0}}},index={install:function(e){e.component("lv-tree",lvTree)}};module.exports=index;
